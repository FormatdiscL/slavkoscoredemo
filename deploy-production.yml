name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: firebase/functions/package-lock.json
        
    - name: Install dependencies
      run: |
        cd firebase/functions
        npm ci
        
    - name: Run linting
      run: |
        cd firebase/functions
        npm run lint
        
    - name: Run tests
      run: |
        cd firebase/functions
        npm test
        
    - name: Run type checking
      run: |
        cd firebase/functions
        npm run type-check

  deploy:
    runs-on: ubuntu-latest
    needs: test
    environment: production
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Install Vercel CLI
      run: npm install -g vercel
      
    - name: Deploy to production
      run: ./scripts/deploy-production.sh
      env:
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Run performance tests
      run: ./scripts/performance-test.sh
      
    - name: Check error budget
      run: ./scripts/check-error-budget.sh

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v3
    
    - name: Run smoke tests
      run: |
        DEPLOYMENT_URL=$(echo ${{ needs.deploy.outputs.deployment_url }})
        ./scripts/smoke-test.sh "$DEPLOYMENT_URL"
        
    - name: Report status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ All smoke tests passed"
        else
          echo "❌ Smoke tests failed"
          exit 1
        fi